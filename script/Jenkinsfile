pipeline{
   agent any 
   tools{
    maven 'M2_HOME'
   }
   stages{
    stage('sonar-scan'){
        steps{
            withSonarQubeEnv('sonarqube'){
        sh ('mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=EnockEssel_geo-app')
            }
        }
    }
    stage("maven"){
        steps{ 
        sh 'mvn clean validate compile install test package'
        }
    }
    stage('upload artifact'){
        steps{
            sh 'curl -uAdmin:AP8gcgmmset5jeYChTJYDN6XmDd -T \
            target/bio*.jar \
            "http://ec2-52-204-60-206.compute-1.amazonaws.com:8081/artifactory/geolocation/geo/bio_${BUILD_ID}.jar"'
        }
    }
    stage('docker login'){
        steps{
            sh 'aws ecr get-login-password --region us-east-1 \
            | docker login --username AWS --password-stdin 141216419469.dkr.ecr.us-east-1.amazonaws.com'
        }
    }
    stage('docker image build'){
        steps{
            sh 'docker build -t logist:v.$(BUILD_ID) .'
            sh 'docker build -t logist:latest .'
        }
    }
    stage('Image tagging'){
        steps{
            sh 'docker tag logist:latest 141216419469.dkr.ecr.us-east-1.amazonaws.com/logist:latest'
            sh 'docker tag logist:latest 141216419469.dkr.ecr.us-east-1.amazonaws.com/logist:v.$BUILD_ID'
        }
    }
    stage('image push'){
        steps{
            sh 'docker push 141216419469.dkr.ecr.us-east-1.amazonaws.com/logist:latest'
            sh 'docker push 141216419469.dkr.ecr.us-east-1.amazonaws.com/logist:v.$BUILD_ID'
        }
    }
    stage('docker login1'){
        steps{
            sh 'aws ecr get-login-password --region us-east-1 \
            | docker login --username AWS --password-stdin 141216419469.dkr.ecr.us-east-1.amazonaws.com'
        }
    }
    stage('docker pull'){
        steps{
            sh 'docker pull logist:latest'
        }
    }
   }
}
 